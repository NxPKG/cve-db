---
name: Cve DB
on:
  schedule:
    - cron: '0 */6 * * *'
  workflow_dispatch:
env:
  # Use docker.io for Docker Hub if empty
  REGISTRY: ghcr.io
  # github.repository as <account>/<repo>
  IMAGE_NAME: ${{ github.repository }}
  VERSION: 2
jobs:
  build:
    name: Build DB
    runs-on: ubuntu-latest
    steps:
      - name: Maximize build space
        uses: easimon/maximize-build-space@v10
        with:
          root-reserve-mb: 32768 # vuln-list dirs + language repositories use more than 12GB of storage
          remove-android: "true"
          remove-docker-images: "true"
          remove-dotnet: "true"
          remove-haskell: "true"

      - name: Check out code into the Go module directory
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod

      - name: Install bbolt
        run: go install go.etcd.io/bbolt/cmd/bbolt@v1.3.5


      - name: Download vuln-list and advisories
        run: make db-fetch-langs db-fetch-vuln-list

      - name: Build the binary
        run: make build

      - name: Build database
        run: make db-build

      - name: Compact DB
        run: make db-compact

      - name: Compress assets
        run: make db-compress

      - name: Move DB
        run: mv assets/db.tar.gz .

      # Login against a Docker registry except on PR
      # https://github.com/docker/login-action
      - name: Log into registry ${{ env.REGISTRY }}
        if: github.event_name != 'pull_request'
        uses: docker/login-action@343f7c4344506bcbf9b4de18042ae17996df046d # v3.0.0
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Install oras
        run: |
          # upgrade to ORAS 1.0.0
          curl -LO https://github.com/oras-project/oras/releases/download/v1.0.0/oras_1.0.0_linux_amd64.tar.gz
          tar -xvf ./oras_1.0.0_linux_amd64.tar.gz

      - name: Upload assets to GHCR
        run: |
          ./oras version
          tags=(latest ${{ env.VERSION }})
          for tag in ${tags[@]}; do
            ./oras push --artifact-type application/vnd.cvedb.cve.config.v1+json \
              ghcr.io/${{ github.repository }}:${tag} \
              db.tar.gz:application/vnd.cvedb.cve.db.layer.v1.tar+gzip
          done
